# $ docker run -p 8080:5000 --env-file ./JobHuntX.API/.env jobhuntx:render

# ================================
# Build frontend (React)
# ================================
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS nswag-build
WORKDIR /src
COPY . .

# NSwag による TypeScript クライアントの自動生成
RUN dotnet tool install --global NSwag.ConsoleCore
RUN /root/.dotnet/tools/nswag help
WORKDIR /src/JobHuntX.API
RUN /root/.dotnet/tools/nswag run nswag.ci.json

# ================================
# Build frontend (React)
# ================================
FROM node:20-alpine AS frontend-build
WORKDIR /app
COPY --from=nswag-build /src/client-app ./client-app
WORKDIR /app/client-app
RUN corepack enable && corepack prepare pnpm@latest --activate
RUN pnpm install && pnpm run build

# ================================
# Build backend (ASP.NET Core)
# ================================
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS backend-build
WORKDIR /src
COPY --from=nswag-build /src ./
RUN dotnet publish JobHuntX.API/JobHuntX.API.csproj -c Release -o /app/publish

# ================================
# Final stage
# ================================
FROM mcr.microsoft.com/dotnet/aspnet:8.0
WORKDIR /app
COPY --from=backend-build /app/publish ./
COPY --from=frontend-build /app/client-app/dist ./wwwroot

EXPOSE 80
ENTRYPOINT ["dotnet", "JobHuntX.API.dll"]
